---
interface Project {
  title: string;
  description: string;
  technologies: string[];
  link?: string;
  image?: string;
}

interface Props {
  projects: Project[];
}

const { projects } = Astro.props;
---

<section class="py-12 bg-white">
  <div class="container mx-auto px-4">
    <h2 class="text-3xl font-bold mb-8 text-gray-800">Featured Projects</h2>
    
    <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
      {projects.map((project) => (
        <div class="bg-gray-50 rounded-lg overflow-hidden shadow-sm">
          {project.image && (
            <div class="h-48 overflow-hidden">
              <img src={project.image} alt={project.title} class="w-full h-full object-cover" />
            </div>
          )}
          <div class="p-6">
            <div class="flex justify-between items-start mb-4">
              <h3 class="text-xl font-semibold text-gray-800">{project.title}</h3>
              {project.link && (
                <a 
                  href={project.link} 
                  target="_blank" 
                  rel="noopener noreferrer"
                  class="text-blue-600 hover:text-blue-800"
                >
                  <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14" />
                  </svg>
                </a>
              )}
            </div>
            
            <p class="text-gray-700 mb-4">{project.description}</p>
            
            <div class="flex flex-wrap gap-2">
              {project.technologies.map((tech) => (
                <span class="bg-blue-100 text-blue-800 text-sm font-medium px-2.5 py-0.5 rounded">
                  {tech}
                </span>
              ))}
            </div>
          </div>
        </div>
      ))}
    </div>
  </div>
</section>