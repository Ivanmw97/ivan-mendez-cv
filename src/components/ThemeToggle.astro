---
---

<button id="themeToggle" class="theme-toggle" aria-label="Toggle dark mode">
  <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="sun-icon">
    <circle cx="12" cy="12" r="5"></circle>
    <line x1="12" y1="1" x2="12" y2="3"></line>
    <line x1="12" y1="21" x2="12" y2="23"></line>
    <line x1="4.22" y1="4.22" x2="5.64" y2="5.64"></line>
    <line x1="18.36" y1="18.36" x2="19.78" y2="19.78"></line>
    <line x1="1" y1="12" x2="3" y2="12"></line>
    <line x1="21" y1="12" x2="23" y2="12"></line>
    <line x1="4.22" y1="19.78" x2="5.64" y2="18.36"></line>
    <line x1="18.36" y1="5.64" x2="19.78" y2="4.22"></line>
  </svg>
  <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="moon-icon">
    <path d="M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z"></path>
  </svg>
</button>

<style>
  .theme-toggle {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 40px;
    height: 40px;
    padding: 0;
    border: 1px solid rgba(0, 0, 0, 0.1);
    border-radius: 9999px;
    background: white;
    box-shadow: 0 2px 6px rgba(0, 0, 0, 0.05);
    cursor: pointer;
    transition: transform 0.2s ease, background-color 0.2s;
  }

  .theme-toggle:hover {
    background-color: #f1f5f9;
    transform: scale(1.05);
  }

  .sun-icon, .moon-icon {
    position: absolute;
    transition: opacity 0.2s ease, transform 0.3s ease;
  }

  .sun-icon {
    opacity: 1;
  }

  .moon-icon {
    opacity: 0;
    transform: rotate(90deg);
  }

  :global(.dark) .theme-toggle {
    background: #2a2a2a;
    border-color: rgba(255, 255, 255, 0.1);
  }

  :global(.dark) .theme-toggle:hover {
    background-color: #3a3a3a;
  }

  :global(.dark) .sun-icon {
    opacity: 0;
    transform: rotate(-90deg);
  }

  :global(.dark) .moon-icon {
    opacity: 1;
    transform: rotate(0);
  }
</style>

<script>
  const themeToggle = document.getElementById('themeToggle');
  const htmlElement = document.documentElement;
  
  // Check for saved theme preference or use the system preference
  const getInitialTheme = () => {
    const savedTheme = localStorage.getItem('theme');
    if (savedTheme) {
      return savedTheme;
    }
    return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
  };

  // Apply the initial theme
  const initialTheme = getInitialTheme();
  htmlElement.classList.toggle('dark', initialTheme === 'dark');
  
  // Toggle theme
  themeToggle?.addEventListener('click', () => {
    const isDark = htmlElement.classList.toggle('dark');
    localStorage.setItem('theme', isDark ? 'dark' : 'light');
  });
</script>